# 데이터베이스 설정
# PostgreSQL 연결 URL
# 형식: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
DATABASE_URL=postgresql://crawler_user:crawler_pass_2025@localhost:5432/naver_crawler

# NextAuth.js 인증 설정
# 시크릿 키 생성: openssl rand -base64 32
NEXTAUTH_SECRET=<generate-with-openssl-rand-base64-32>
NEXTAUTH_URL=http://localhost:3000

# 내부 API 보안 키
# Python 크롤러와 Next.js API 간 통신 보안
# 시크릿 키 생성: openssl rand -base64 32
INTERNAL_API_SECRET=<generate-with-openssl-rand-base64-32>

# Redis 캐싱 설정
# 로컬: redis://localhost:6379
# Docker: redis://redis:6379
REDIS_URL=redis://localhost:6379

# 네이버 지도 API (선택 사항)
# https://www.ncloud.com/product/applicationService/maps 에서 발급
NAVER_MAPS_CLIENT_ID=<your-client-id>
NAVER_MAPS_CLIENT_SECRET=<your-client-secret>

# Discord 웹훅 (선택 사항)
# 크롤링 완료 알림용
DISCORD_WEBHOOK_URL=<your-discord-webhook-url>

# 환경 설정
NODE_ENV=development

# 로깅 레벨
# 옵션: error, warn, info, debug
LOG_LEVEL=info

# Sentry 에러 추적 (선택 사항)
# https://sentry.io 에서 프로젝트 생성 후 DSN 발급
# SENTRY_DSN=<your-sentry-dsn>

# 프로덕션 환경 설정 예시
# DATABASE_URL=postgresql://user:pass@nas-ip:5432/dbname
# NEXTAUTH_URL=https://your-domain.com
# NODE_ENV=production
# LOG_LEVEL=warn

