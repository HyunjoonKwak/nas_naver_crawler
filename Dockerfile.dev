# syntax=docker/dockerfile:1.7
# Development mode Dockerfile (No build, Hot Reload)
FROM python:3.11-slim

# 환경변수 설정
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PLAYWRIGHT_BROWSERS_PATH=/ms-playwright \
    NODE_ENV=development

WORKDIR /app

# 기본 패키지 및 대체 폰트 설치
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    wget \
    curl \
    openssl \
    libssl3 \
    fonts-liberation \
    fonts-dejavu-core \
    fonts-unifont \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# PostgreSQL 클라이언트 라이브러리 설치 (psycopg2 의존성)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libpq-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Python 패키지 설치 (캐시 마운트 사용)
COPY requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip && \
    pip install -r requirements.txt

# Playwright 브라우저만 설치
RUN playwright install chromium

# Playwright 의존성을 수동으로 설치
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libglib2.0-0 \
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libdbus-1-3 \
    libxcb1 \
    libxkbcommon0 \
    libx11-6 \
    libxcomposite1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    libatspi2.0-0 \
    libexpat1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Node.js 20 설치
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# package.json 복사 및 의존성 설치 (캐시 마운트 사용)
COPY package.json package-lock.json* ./
RUN --mount=type=cache,target=/root/.npm \
    npm ci

# Prisma 파일 복사 및 클라이언트 생성
COPY prisma ./prisma
RUN npx prisma generate

# Python 크롤러 파일 복사
COPY logic ./logic
COPY config.env ./

# Next.js 애플리케이션 파일 복사
COPY app ./app
COPY components ./components
COPY hooks ./hooks
COPY public ./public
COPY lib ./lib
COPY scripts ./scripts
COPY instrumentation.ts next.config.js tsconfig.json tailwind.config.js postcss.config.js ./

# 필요한 디렉토리 생성
RUN mkdir -p crawled_data logs && \
    chmod +x logic/nas_playwright_crawler.py

# 포트 노출
EXPOSE 3000

# 개발 모드로 Next.js 실행 (Hot Reload)
CMD ["npm", "run", "dev"]
